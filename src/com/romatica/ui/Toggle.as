/** * ------------------------------------------------------- * copyright(c). romatica.com * @author itoz * @version 1.0 * ------------------------------------------------------- * -2009.9.19  オーバーイベントを追加しました。 *				オンとオフのルールが統一されてない直す　 *				デフォルト ＞ オフ　クリックされていな状態 *						　  オン　クリックされた状態に */package com.romatica.ui {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	/**	 * トグルボタン	 * 	 * コンストラクタに渡すMC内にoverArea_mcが必要	 * flaでflameNameに　on off on_over off_over を用意するとそこに飛んで動作します。	 *   	 * @example : 
  	 *  <listing version="3.0">
  	 *  var tgl0 = new Toggle(icon0_mc,false)  	 *  tgl0.addEventListener("TOGGLE_ON",onToggle)  	 *  tgl0.addEventListener("TOGGLE_OFF",offToggle)  	 *  function onToggle(e:Event){   	 *  }  	 *  function offToggle(e:Event){  	 *  }
 	 *  </listing>
 	 */	public class Toggle extends Sprite	{		private var _btn : MovieClip;		private var _toggle : Boolean= true;//true = on   false = off		public static const TOGGLE_ON : String = "TOGGLE_ON";		public static const TOGGLE_OFF : String = "TOGGLE_OFF";		public function Toggle (btn : MovieClip , toggle : Boolean = false)		{			_btn = btn;			_toggle = toggle;			setStatus( _toggle );			setEvents();		}		// getter		public function get btn () : MovieClip		{			return _btn;		}				//////////////////////////////////////////////////////////////////////////////////////////////////////		//----------------------------------------------------------------------------------------------------		//                                                                         ＞イベント設定		//		public function setEvents() : void {					var _ov : MovieClip= _btn.overArea_mc;			_ov.buttonMode = true;			_ov.mouseChildren = false;			_ov.addEventListener( MouseEvent.CLICK, onClick, false, 0, true );			_ov.addEventListener( MouseEvent.ROLL_OVER, onOver, false, 0, true );			_ov.addEventListener( MouseEvent.ROLL_OUT, onOut, false, 0, true );				}		//////////////////////////////////////////////////////////////////////////////////////////////////////		//----------------------------------------------------------------------------------------------------		//                                                                         ＞クリック		public function onClick (e : MouseEvent) : void		{			_toggle = !_toggle;			setStatus( _toggle );			if (_toggle) {				dispatchEvent( new Event( TOGGLE_ON ) );			}			else {				dispatchEvent( new Event( TOGGLE_OFF ) );			}			// trace(_toggle)		}		//----------------------------------------------------------------------------------------------------		//                                                                         ＞ステータス変更		public function setStatus (state : Boolean) : void		{			// プロパティ設定			if (state) {				_btn.gotoAndStop( "off" );			}			else {				_btn.gotoAndStop( "on" );			}			_toggle = state;		}		//----------------------------------------------------------------------------------------------------		//                                                                         ＞オーバー		public function onOver (e : MouseEvent) : void		{			var trg : MovieClip = e.target as MovieClip;			if (_toggle) {				_btn.gotoAndStop( "off_over" );			}			else {				_btn.gotoAndStop( "on_over" );			}			// trg.alpha = 0.5;		}		//----------------------------------------------------------------------------------------------------		//                                                                         ＞アウト		public function onOut (e : MouseEvent) : void		{			var trg : MovieClip = e.target as MovieClip;			if (_toggle) {				_btn.gotoAndStop( "off" );			}			else {				_btn.gotoAndStop( "on" );			}			// trg.alpha = 0		}	}}